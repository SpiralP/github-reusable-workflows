on:
  workflow_call:
    inputs:
      runs-on:
        default: ubuntu-latest
        description: Runner to use for the job.
        required: false
        type: string
      args:
        default: ""
        description: Arguments to pass to semantic-release.
        required: false
        type: string
      extends:
        default: ""
        description: Path to a config file for extending semantic-release.
        required: false
        type: string
      replace-files:
        default: ""
        description: |
          List of files (separated by line) to replace versions in.
          A commit will be created for this release.
        required: false
        type: string
      package-name:
        default: ""
        description: Name of the package to replace versions for.
        required: false
        type: string
      version-metadata:
        default: ""
        description: Extra metadata to add to version number (v1.2.3+metadata)
        required: false
        type: string
      environment-name:
        default: ""
        description: Name of the environment to use for the job.
        required: false
        type: string
      environment-url:
        default: ""
        description: URL of the environment to use for the job.
        required: false
        type: string
      cargo-publish:
        default: false
        description: Whether to publish a Rust crate to crates.io
        required: false
        type: boolean
    outputs:
      tag:
        description: The tag created by the release.
        value: ${{ jobs.release.outputs.tag }}
      version:
        description: The version created by the release.
        value: ${{ jobs.release.outputs.version }}
    secrets:
      app-id:
        description: GitHub App ID
        required: false
      app-private-key:
        description: GitHub App private key
        required: false
      token:
        description: GitHub token
        required: false
      cargo-registry-token:
        description: Cargo registry token for publishing Rust crates to crates.io
        required: false

# Don't restrict permissions here, since you can pass a custom token
# permissions:
#   contents: write # for checkout, and to be able to create a release

jobs:
  release:
    runs-on: ${{ inputs.runs-on }}
    environment:
      name: ${{ inputs.environment-name }}
      url: ${{ inputs.environment-name && (inputs.environment-url || format('{0}/{1}/releases/{2}', github.server_url, github.repository, steps.release.outputs.tag && format('tag/{0}', steps.release.outputs.tag) || 'latest')) || '' }}
    outputs:
      tag: ${{ steps.release.outputs.tag }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        if: ${{ env.OK == 'true-true-true' }}
        env:
          OK: ${{ secrets.token == '' }}-${{ secrets.app-id != '' }}-${{ secrets.app-private-key != '' }}
        with:
          app-id: ${{ secrets.app-id }}
          private-key: ${{ secrets.app-private-key }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive
          token: ${{ secrets.token || steps.app-token.outputs.token || github.token }}
      - uses: cachix/install-nix-action@17fe5fb4a23ad6cbbe47d6b3f359611ad276644c # v31.4.0
        if: ${{ inputs.runs-on != 'self-hosted' }}
      - run: sudo chown -R $(id -u):$(id -g) /nix
        if: ${{ inputs.runs-on != 'self-hosted' }}
      - name: Get workflow SHA
        id: get-workflow-sha
        run: |
          workflow_path="$(printf '%s' "$GITHUB_WORKFLOW_REF" | sed 's/[^/]*\/[^/]*\/\([^@]*\).*/\1/')"
          echo "workflow_path=$workflow_path"
          workflow_sha="$(cat "$workflow_path" | grep -F ' uses: SpiralP/github-reusable-workflows/.github/workflows/release.yml' | sed 's/.*@\(\S*\).*/\1/')"
          test -z "$workflow_sha" && workflow_sha="main"
          echo "workflow-sha=$workflow_sha" | tee -a "$GITHUB_OUTPUT"
        env:
          GITHUB_WORKFLOW_REF: ${{ github.workflow_ref }}
      - uses: nix-community/cache-nix-action@135667ec418502fa5a3598af6fb9eb733888ce6a # v6.1.3
        if: ${{ inputs.runs-on != 'self-hosted' }}
        with:
          primary-key: nix-${{ github.workflow }}-${{ runner.os }}-${{ runner.arch }}-${{ steps.get-workflow-sha.outputs.workflow-sha }}
          restore-prefixes-first-match: nix-${{ github.workflow }}-${{ runner.os }}-${{ runner.arch }}-
          gc-max-store-size: 5G
      - run: sudo chown -R 0:0 /nix
        if: ${{ inputs.runs-on != 'self-hosted' }}
      - run: |
          nix build "github:SpiralP/github-reusable-workflows/$WORKFLOW_SHA#semantic-release" \
            --print-build-logs --print-out-paths --out-link "$TMPDIR/semantic-release"
        env:
          TMPDIR: ${{ runner.temp }}
          WORKFLOW_SHA: ${{ steps.get-workflow-sha.outputs.workflow-sha }}
      - name: Release
        id: release
        run: |
          REPO_NAME="$(echo "$REPO" | cut -d '/' -f 2)"
          export PACKAGE_NAME="${PACKAGE_NAME:-$REPO_NAME}"
          export VERSION_OUTPUT_FILE="$(mktemp)"
          export TAG_OUTPUT_FILE="$(mktemp)"

          "$TMPDIR/semantic-release/bin/semantic-release" ${{ inputs.args }}

          echo "version=$(cat "$VERSION_OUTPUT_FILE")" | tee -a "$GITHUB_OUTPUT"
          echo "tag=$(cat "$TAG_OUTPUT_FILE")" | tee -a "$GITHUB_OUTPUT"
        env:
          CARGO_PUBLISH: ${{ inputs.cargo-publish }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.cargo-registry-token }}
          EXTENDS: ${{ inputs.extends }}
          GITHUB_TOKEN: ${{ secrets.token || steps.app-token.outputs.token || github.token }}
          PACKAGE_NAME: ${{ inputs.package-name }}
          REPLACE_FILES: ${{ inputs.replace-files }}
          REPO: ${{ github.repository }}
          TMPDIR: ${{ runner.temp }}
          VERSION_METADATA: ${{ inputs.version-metadata }}
          WORKFLOW_SHA: ${{ steps.get-workflow-sha.outputs.workflow-sha }}
