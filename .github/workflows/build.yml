on:
  workflow_call:
    inputs:
      runs-on:
        default: ubuntu-latest
        description: Runner to use for the job.
        required: false
        type: string
      flake-attribute:
        default: default
        description: Nix flake attribute path to default output to test build.
        required: false
        type: string
      upload-build-result:
        default: false
        description: Upload the build result as an artifact. (named "build-result")
        required: false
        type: boolean

# Can't restrict permissions here, or else all use cases require `actions: write`
# permissions:
#   actions: write # for uploading artifact
#   contents: read # for checkout

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - uses: cachix/install-nix-action@17fe5fb4a23ad6cbbe47d6b3f359611ad276644c # v31.4.0
        if: ${{ inputs.runs-on != 'self-hosted' }}

      - run: sudo chown -R $(id -u):$(id -g) /nix
        if: ${{ inputs.runs-on != 'self-hosted' }}
      - uses: nix-community/cache-nix-action@135667ec418502fa5a3598af6fb9eb733888ce6a # v6.1.3
        if: ${{ inputs.runs-on != 'self-hosted' }}
        with:
          primary-key: nix-${{ github.workflow }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ github.workflow }}-${{ runner.os }}-${{ runner.arch }}-
          gc-max-store-size: 5G
      - run: sudo chown -R 0:0 /nix
        if: ${{ inputs.runs-on != 'self-hosted' }}

      - run: |
          nix build '.?submodules=1#${{ inputs.flake-attribute }}' \
            --print-build-logs --no-update-lock-file

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ inputs.upload-build-result }}
        with:
          name: build-result
          path: result
