on:
  workflow_call:
    inputs:
      runs-on:
        default: ubuntu-latest
        description: Runner to use for the job.
        required: false
        type: string
      flake-attribute:
        default: default
        description: Nix flake attribute path to default output to test build.
        required: false
        type: string
      upload-build-result:
        default: false
        description: Upload the build result as an artifact. (named "build-result")
        required: false
        type: boolean

# Can't restrict permissions here, or else all use cases require `actions: write`
# permissions:
#   actions: write # for uploading artifact
#   contents: read # for checkout

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: recursive

      - uses: cachix/install-nix-action@fd24c48048070c1be9acd18c9d369a83f0fe94d7 # v31.8.1
        if: ${{ inputs.runs-on != 'self-hosted' }}

      - run: sudo chown -R $(id -u):$(id -g) /nix
        if: ${{ inputs.runs-on != 'self-hosted' }}
      - uses: nix-community/cache-nix-action@135667ec418502fa5a3598af6fb9eb733888ce6a # v6.1.3
        if: ${{ inputs.runs-on != 'self-hosted' }}
        with:
          primary-key: nix-${{ github.workflow }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ github.workflow }}-${{ runner.os }}-${{ runner.arch }}-
          gc-max-store-size: 5G
      - run: sudo chown -R 0:0 /nix
        if: ${{ inputs.runs-on != 'self-hosted' }}

      - run: |
          nix build '.?submodules=1#${{ inputs.flake-attribute }}' \
            --print-build-logs --no-update-lock-file

      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        if: ${{ inputs.upload-build-result }}
        with:
          name: build-result
          path: result
